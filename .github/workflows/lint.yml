name: Lint

on:
    push:
        branches: [master]
    pull_request:
        branches: [master]

jobs:
    lint:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2

            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                  node-version: 18

            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

            - uses: actions/cache@v3
              id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Install Dependencies
              if: steps.yarn-cache.outputs.cache-hit != 'true'
              run: yarn install

            - name: Lint
              run: yarn lint

            - name: Save ESLint JSON Report
              run: yarn eslint --output-file eslint_report.json --format json src
              continue-on-error: true

            - name: Annotate Code Linting Results
              uses: ataylorme/eslint-annotate-action@v2
              with:
                  repo-token: "${{ secrets.GITHUB_TOKEN }}"
                  report-json: "eslint_report.json"

            - name: Upload ESLint report
              uses: actions/upload-artifact@v2
              with:
                  name: eslint_report.json
                  path: eslint_report.json
